buildscript {
	repositories {
		maven {
			url 'https://repository.unreleased.work/repository/maven-releases'
		}
	}
//	dependencies {
//		classpath 'com.cognizant.cde:gitlab-merge-gradle-plugin:1.0.0'
//	}
}
plugins {
	id 'org.springframework.boot' version '2.1.8.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id "com.github.pivotalservices.cf-app" version "2.3.0-rc.6"
	id 'com.moowork.node' version '1.2.0'
	id "org.sonarqube" version "2.6.2"
	id "jacoco"
	id 'maven'
	id 'java'
	id 'application'
}
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: 'org.sonarqube'
//apply plugin: com.cognizant.cde.GitlabMergeVerificationPlugin
apply plugin: 'idea'

group = 'com.cognizant.cde'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
mainClassName = 'com.cognizant.cde.tjfems.TjFeMsApplication'

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "Greenwich.SR3")
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-oauth2'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

//cfConfig {
//	ccHost = project.getProperty(project.getProperty('ENV') + '.CCHostName')
//	ccUser = project.getProperty('CF_USR')
//	ccPassword = project.getProperty('CF_PSW')
//	org = project.getProperty(project.getProperty('ENV') + '.CCOrg')
//	space = project.getProperty(project.getProperty('ENV') + '.CCSpace')
//	name = project.getProperty(project.getProperty('ENV') + '.AppName')
//	filePath = "build/libs/tj-fe-ms-0.0.1-SNAPSHOT.jar"
//	path = ""
//	//config
//	instances = 1
//	memory = 1024
//	timeout = 180
//	routes = [project.getProperty(project.getProperty('ENV') + '.CCRoutes')]
//	def profiles = project.getProperty('ENV').toLowerCase() + ",cloud"
//	environment = ["SPRING_PROFILES_ACTIVE": profiles]
//}

